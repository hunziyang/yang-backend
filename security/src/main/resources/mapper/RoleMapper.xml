<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yang.portal.security.mapper.RoleMapper">

    <resultMap type="com.yang.portal.security.entity.Role" id="RoleMap">
        <result property="id" column="ID" jdbcType="INTEGER"/>
        <result property="name" column="NAME" jdbcType="VARCHAR"/>
        <result property="code" column="CODE" jdbcType="VARCHAR"/>
        <result property="uniqueId" column="UNIQUE_ID" jdbcType="INTEGER"/>
        <result property="description" column="DESCRIPTION" jdbcType="VARCHAR"/>
        <result property="isDelete" column="IS_DELETE" jdbcType="BOOLEAN"/>
        <result property="revision" column="REVISION" jdbcType="INTEGER"/>
        <result property="createdId" column="CREATED_ID" jdbcType="INTEGER"/>
        <result property="createdBy" column="CREATED_BY" jdbcType="VARCHAR"/>
        <result property="createdTime" column="CREATED_TIME" jdbcType="TIMESTAMP"/>
        <result property="updatedId" column="UPDATED_ID" jdbcType="INTEGER"/>
        <result property="updatedBy" column="UPDATED_BY" jdbcType="VARCHAR"/>
        <result property="updatedTime" column="UPDATED_TIME" jdbcType="TIMESTAMP"/>
    </resultMap>
    <select id="getRoleCodesByUserId" resultType="string">
        SELECT
            r.`CODE`
        FROM
            USER_ROLE ur,
            ROLE r
        WHERE
            ur.USER_ID = #{userId}
          AND ur.IS_DELETE = FALSE
          AND ur.ROLE_ID = r.ID
          AND r.IS_DELETE = FALSE
    </select>

    <select id="getRoles" resultMap="RoleMap">
        <include refid="getRolesSql"/>
        <choose>
            <when test="orderBy !=null and orderBy == '-createdTime'">
                ORDER BY r.CREATED_TIME DESC
            </when>
            <when test="orderBy !=null and orderBy == 'createdTime'">
                ORDER BY r.CREATED_TIME ASC
            </when>
            <otherwise>
                ORDER BY r.ID DESC
            </otherwise>
        </choose>
        LIMIT #{offset},#{rows}
    </select>

    <select id="getRolesCount" resultType="long">
        SELECT COUNT(1) FROM (<include refid="getRolesSql"/>) result
    </select>

    <sql id="getRolesSql">
        SELECT
        <include refid="baseField"/>
        FROM
        ROLE r
        <where>
            IS_DELETE = FALSE
            <if test="query.roleName !=null and query.roleName !=''">
                AND r.`NAME` LIKE CONCAT('%',#{query.roleName},'%')
            </if>
            <if test="query.roleCode !=null and query.roleCode !=''">
                AND r.`CODE` LIKE CONCAT('%',#{query.roleCode},'%')
            </if>
        </where>
    </sql>

    <sql id="baseField">
        r.ID,r.`NAME`,r.`CODE`,r.DESCRIPTION,r.CREATED_ID,r.CREATED_BY,r.CREATED_TIME,r.UPDATED_ID,r.UPDATED_BY,r.UPDATED_TIME
    </sql>
</mapper>
